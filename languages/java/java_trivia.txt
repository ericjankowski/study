How many Java keywords can you name?

	1.  abstract
	2.  boolean
	3.  break
	4.  byte
	5.  case
	6.  catch
	
	7.  char
	8.  class
	9.  const
	10. continue
	11. default
	12. do
	
	13. double
	14. else
	15. extends
	16. final
	17. finally
	18. float
	
	19. for
	20. goto
	21. if
	22. implements
	23. import
	24. instanceof
	
	25. int
	26. interface
	27. long
	28. native
	29. new
	30. package
	
	31. private
	32. protected
	33. public
	34. return
	35. short
	36. static

	37. strictfp
	38. super
	39. switch
	40. synchronized
	41. this
	42. throw

	43. throws
	44. transient
	45. try
	46. void
	47. volatile
	48. while

	49. assert
	50. enum

Is this legal? - Yes

	int [][] matrix [];

What is the output? I am an Object String

	public class Tester{
	    public void print(String s){
	        System.out.println("I am a String" + s);
	    }
	
	    public void print(Object o){
	        System.out.println("I am an Object" + o);
	    }
	
	    public static void main(String [] args){
	        Tester tester = new Tester();
	        Object o = new String("String");
	        tester.print(o);
	    }
	}

Will this compile? - Yes

	public interface Bounceable{
		public void bounce();
	}

	public abstract class Ball implements Bounceable{
		public void roll();
	}

	public class BeachBall extends Ball{
		public void bounce(){}
		public void roll(){}
	}

How many assignment operators are there in Java? - 12

How many assignment operators in Java can you name?
	1.  =
	2.  +=
	3.  -=
	4.  *=
	5.  /=
	6.  %=
	7.  &=
	8.  ^=
	9.  <<=
	10. >>=
	11. >>>=
	12. |=

Will this compile? - No, decimal point literals are implicitly doubles.
	float f = 32.3;